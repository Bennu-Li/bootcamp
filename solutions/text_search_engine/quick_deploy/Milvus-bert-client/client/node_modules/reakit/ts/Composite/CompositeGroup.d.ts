import * as React from "react";
import { GroupOptions, GroupHTMLProps } from "../Group/Group";
import { unstable_IdOptions, unstable_IdHTMLProps } from "../Id/Id";
import { unstable_CompositeStateReturn } from "./CompositeState";
export declare type unstable_CompositeGroupOptions = GroupOptions & unstable_IdOptions & Pick<unstable_CompositeStateReturn, "registerGroup" | "unregisterGroup">;
export declare type unstable_CompositeGroupHTMLProps = GroupHTMLProps & unstable_IdHTMLProps;
export declare type unstable_CompositeGroupProps = unstable_CompositeGroupOptions & unstable_CompositeGroupHTMLProps;
export declare const unstable_useCompositeGroup: {
    (options?: unstable_CompositeGroupOptions | undefined, htmlProps?: import("..").BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): import("..").BoxHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: unstable_CompositeGroupOptions, htmlProps: import("..").BoxHTMLProps) => unstable_CompositeGroupOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef"> & {
        id?: string | undefined;
    } & Pick<unstable_CompositeStateReturn, "registerGroup" | "unregisterGroup"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        wrapElement?: ((element: React.ReactNode) => React.ReactNode) | undefined;
    }, next: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef"> & {
        id?: string | undefined;
    } & Pick<unstable_CompositeStateReturn, "registerGroup" | "unregisterGroup"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        wrapElement?: ((element: React.ReactNode) => React.ReactNode) | undefined;
    }) => boolean) | undefined;
};
export declare const unstable_CompositeGroup: import("reakit-system/src/createComponent").Component<"div", unstable_CompositeGroupOptions>;
