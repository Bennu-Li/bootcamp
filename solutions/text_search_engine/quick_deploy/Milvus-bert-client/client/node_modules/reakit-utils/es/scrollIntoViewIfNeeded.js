// Based on https://gist.github.com/hsablonniere/2581101

/**
 * Ponyfill for `Element.prototype.scrollIntoViewIfNeeded`
 *
 * @example
 * import { scrollIntoViewIfNeeded } from "reakit-utils";
 *
 * scrollIntoViewIfNeeded(document.getElementById("id"), true);
 * // same as
 * document.getElementById("id").scrollIntoViewIfNeeded(true);
 */
function scrollIntoViewIfNeeded(element, center) {
  if ("scrollIntoViewIfNeeded" in element) {
    element.scrollIntoViewIfNeeded(center);
    return;
  }

  var parent = element.parentElement;

  if (!parent) {
    return;
  }

  var parentComputedStyle = window.getComputedStyle(parent, null);
  var parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue("border-top-width"), 10);
  var parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue("border-left-width"), 10);
  var overTop = element.offsetTop - parent.offsetTop < parent.scrollTop;
  var overBottom = element.offsetTop - parent.offsetTop + element.clientHeight - parentBorderTopWidth > parent.scrollTop + parent.clientHeight;
  var overLeft = element.offsetLeft - parent.offsetLeft < parent.scrollLeft;
  var overRight = element.offsetLeft - parent.offsetLeft + element.clientWidth - parentBorderLeftWidth > parent.scrollLeft + parent.clientWidth;
  var alignWithTop = overTop && !overBottom;

  if ((overTop || overBottom) && center) {
    parent.scrollTop = element.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + element.clientHeight / 2;
  }

  if ((overLeft || overRight) && center) {
    parent.scrollLeft = element.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + element.clientWidth / 2;
  }

  if ((overTop || overBottom || overLeft || overRight) && !center) {
    element.scrollIntoView(alignWithTop);
  }
}

export { scrollIntoViewIfNeeded };
