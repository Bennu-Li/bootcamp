import 'reakit-system/createComponent';
import 'reakit-system/createHook';
import '../Box/Box.js';
import '../_rollupPluginBabelHelpers-ce04ac6e.js';
import 'react';
import 'reakit-utils/useForkRef';
import 'reakit-utils/isButton';
import 'reakit-utils/tabbable';
import 'reakit-utils/hasFocusWithin';
import { warning } from 'reakit-warning';
import '../Tabbable/Tabbable.js';
import '../Clickable/Clickable.js';
import '../Button/Button.js';
import 'reakit-utils/useAllCallbacks';
import 'reakit-utils/useSealedState';
import '../Id/IdProvider.js';
import '../Id/IdState.js';
import '../Id/IdGroup.js';
import 'reakit-utils/useIsomorphicEffect';
import 'reakit-utils/cx';
import { useDisclosureState } from '../Disclosure/DisclosureState.js';
import '../Disclosure/DisclosureContent.js';
import '../Disclosure/Disclosure.js';

function useHiddenState(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }

  process.env.NODE_ENV !== "production" ? warning(true, "`useHiddenState` has been renamed to `useDisclosureState`. `useHiddenState` will no longer work in future versions.", "See https://reakit.io/docs/disclosure") : void 0;
  return useDisclosureState(initialState);
}
useHiddenState.__keys = useDisclosureState.__keys;

export { useHiddenState };
