import * as React from "react";
import { unstable_IdGroupOptions, unstable_IdGroupHTMLProps } from "../Id/IdGroup";
import { TabbableOptions, TabbableHTMLProps } from "../Tabbable";
import { unstable_CompositeStateReturn } from "./CompositeState";
export declare type unstable_CompositeOptions = TabbableOptions & unstable_IdGroupOptions & Pick<Partial<unstable_CompositeStateReturn>, "unstable_virtual" | "currentId" | "orientation" | "unstable_moves" | "wrap" | "groups"> & Pick<unstable_CompositeStateReturn, "items" | "setCurrentId" | "first" | "last" | "move">;
export declare type unstable_CompositeHTMLProps = TabbableHTMLProps & unstable_IdGroupHTMLProps;
export declare type unstable_CompositeProps = unstable_CompositeOptions & unstable_CompositeHTMLProps;
export declare const unstable_useComposite: {
    (options?: unstable_CompositeOptions | undefined, htmlProps?: TabbableHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): TabbableHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: unstable_CompositeOptions, htmlProps: TabbableHTMLProps) => unstable_CompositeOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
    } & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<unstable_CompositeStateReturn>, "wrap" | "currentId" | "unstable_virtual" | "orientation" | "groups" | "unstable_moves"> & Pick<unstable_CompositeStateReturn, "move" | "first" | "last" | "items" | "setCurrentId"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        wrapElement?: ((element: React.ReactNode) => React.ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    }, next: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
    } & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<unstable_CompositeStateReturn>, "wrap" | "currentId" | "unstable_virtual" | "orientation" | "groups" | "unstable_moves"> & Pick<unstable_CompositeStateReturn, "move" | "first" | "last" | "items" | "setCurrentId"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        wrapElement?: ((element: React.ReactNode) => React.ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    }) => boolean) | undefined;
};
export declare const unstable_Composite: import("reakit-system/src/createComponent").Component<"div", unstable_CompositeOptions>;
